export const data = JSON.parse("{\"key\":\"v-c1dfe1a8\",\"path\":\"/docs/GoLang-%E6%96%B9%E6%B3%95.html\",\"title\":\"GoLang-方法\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"GoLang-方法\",\"date\":\"2022-11-28T22:04:25.000Z\",\"categories\":\"Go\",\"tags\":[\"Go\"],\"description\":\"package main import \\\"fmt\\\" type N int func (n N) testVal() { \\tn++ \\tfmt.Printf(\\\"%p, %v\\\\n\\\", &amp;n, n) } func (n *N) testPointer() { \\t*n++ \\tfmt.Printf(\\\"%p, %v\\\\n\\\", n, *n) } func main() { \\tvar n N = 0 \\tn.testVal() \\tn.testPointer() \\tp := &amp;n \\tp.testVal() \\tp.testPointer() \\tfmt.Printf(\\\"%p, %v\\\\n\\\", &amp;n, n) }\"},\"headers\":[],\"readingTime\":{\"minutes\":1.36,\"words\":407},\"filePathRelative\":\"docs/GoLang-方法.md\",\"localizedDate\":\"2022年11月29日\",\"excerpt\":\"<div class=\\\"language-go line-numbers-mode\\\" data-ext=\\\"go\\\"><pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">package</span> main\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">\\\"fmt\\\"</span>\\n\\n<span class=\\\"token keyword\\\">type</span> N <span class=\\\"token builtin\\\">int</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token punctuation\\\">(</span>n N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">testVal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tn<span class=\\\"token operator\\\">++</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%p, %v\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>n<span class=\\\"token punctuation\\\">,</span> n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">*</span>N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">testPointer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token operator\\\">*</span>n<span class=\\\"token operator\\\">++</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%p, %v\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> n<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">var</span> n N <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n\\tn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">testVal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\tn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">testPointer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\tp <span class=\\\"token operator\\\">:=</span> <span class=\\\"token operator\\\">&amp;</span>n\\n\\tp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">testVal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\tp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">testPointer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%p, %v\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>n<span class=\\\"token punctuation\\\">,</span> n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
