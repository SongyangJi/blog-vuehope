export const data = JSON.parse("{\"key\":\"v-05a1b816\",\"path\":\"/posts/docs/GoLang-%E7%B1%BB%E5%9E%8B.html\",\"title\":\"GoLang-类型\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"GoLang-类型\",\"date\":\"2022-11-21T09:48:19.000Z\",\"categories\":\"Go\",\"tags\":[\"Go\"],\"description\":\"Go是静态类型语言。 定义 用var关键字声明变量 package main import ( \\t\\\"fmt\\\" ) var x int // 默认值为0 var f bool // 默认值为false var a, b int // 相同类型的多个变量 var x1 int = 1 // 这里的int可以省略 var b byte = 1 // 这里的byte不可以省略 var i = 0 // 省略类型，提供初始值，类型有编译器推断 var j, s = 100, \\\"s\\\" // 不同类型初始化值 // 以组方式整理多行变量 var ( \\ti1, i2 int \\tx1, s2 = 12.1, \\\"\\\" ) func main() { \\tfmt.Println(\\\"Hello World\\\") }\"},\"headers\":[{\"level\":2,\"title\":\"简短模式\",\"slug\":\"简短模式\",\"link\":\"#简短模式\",\"children\":[]},{\"level\":2,\"title\":\"多变量赋值\",\"slug\":\"多变量赋值\",\"link\":\"#多变量赋值\",\"children\":[]},{\"level\":2,\"title\":\"基本类型\",\"slug\":\"基本类型\",\"link\":\"#基本类型\",\"children\":[]},{\"level\":2,\"title\":\"引用类型\",\"slug\":\"引用类型\",\"link\":\"#引用类型\",\"children\":[]},{\"level\":2,\"title\":\"自定义类型\",\"slug\":\"自定义类型\",\"link\":\"#自定义类型\",\"children\":[]}],\"readingTime\":{\"minutes\":2.57,\"words\":770},\"filePathRelative\":\"posts/docs/GoLang-类型.md\",\"localizedDate\":\"2022年11月21日\",\"excerpt\":\"<p>Go是<strong>静态类型</strong>语言。</p>\\n<h1> 定义</h1>\\n<p>用<code>var</code>关键字声明变量</p>\\n<div class=\\\"language-go line-numbers-mode\\\" data-ext=\\\"go\\\"><pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">package</span> main\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token string\\\">\\\"fmt\\\"</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">var</span> x <span class=\\\"token builtin\\\">int</span>  <span class=\\\"token comment\\\">// 默认值为0</span>\\n<span class=\\\"token keyword\\\">var</span> f <span class=\\\"token builtin\\\">bool</span> <span class=\\\"token comment\\\">// 默认值为false</span>\\n\\n<span class=\\\"token keyword\\\">var</span> a<span class=\\\"token punctuation\\\">,</span> b <span class=\\\"token builtin\\\">int</span> <span class=\\\"token comment\\\">// 相同类型的多个变量</span>\\n\\n\\n<span class=\\\"token keyword\\\">var</span> x1 <span class=\\\"token builtin\\\">int</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// 这里的int可以省略</span>\\n<span class=\\\"token keyword\\\">var</span> b <span class=\\\"token builtin\\\">byte</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// 这里的byte不可以省略</span>\\n\\n<span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>           <span class=\\\"token comment\\\">// 省略类型，提供初始值，类型有编译器推断</span>\\n<span class=\\\"token keyword\\\">var</span> j<span class=\\\"token punctuation\\\">,</span> s <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"s\\\"</span> <span class=\\\"token comment\\\">// 不同类型初始化值</span>\\n\\n<span class=\\\"token comment\\\">// 以组方式整理多行变量</span>\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token punctuation\\\">(</span>\\n\\ti1<span class=\\\"token punctuation\\\">,</span> i2 <span class=\\\"token builtin\\\">int</span>\\n\\tx1<span class=\\\"token punctuation\\\">,</span> s2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">12.1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"\\\"</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello World\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
