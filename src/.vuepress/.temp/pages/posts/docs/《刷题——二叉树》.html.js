export const data = JSON.parse("{\"key\":\"v-c018e32e\",\"path\":\"/posts/docs/%E3%80%8A%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%8B.html\",\"title\":\"《刷题——二叉树》\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"《刷题——二叉树》\",\"date\":\"2023-01-23T05:01:31.000Z\",\"categories\":\"算法题\",\"tags\":null,\"description\":\"二叉树 二叉树的LCA（least-common-ancestor） import java.util.*; public class Solution { public int lowestCommonAncestor (TreeNode root, int o1, int o2) { // write code here if(root == null) return -1; if(root.val == o1) return o1; if(root.val == o2) return o2; int l1 = lowestCommonAncestor(root.left, o1, o2); int l2 = lowestCommonAncestor(root.right, o1, o2); // l1、l2 不可能同时为 -1 if(l1 == -1) return l2; if(l2 == -1) return l1; return root.val; } }\"},\"headers\":[{\"level\":2,\"title\":\"二叉树\",\"slug\":\"二叉树\",\"link\":\"#二叉树\",\"children\":[{\"level\":3,\"title\":\"二叉树的LCA（least-common-ancestor）\",\"slug\":\"二叉树的lca-least-common-ancestor\",\"link\":\"#二叉树的lca-least-common-ancestor\",\"children\":[]},{\"level\":3,\"title\":\"二叉树的重建 + 层序遍历\",\"slug\":\"二叉树的重建-层序遍历\",\"link\":\"#二叉树的重建-层序遍历\",\"children\":[]},{\"level\":3,\"title\":\"二叉树中的最大路径和\",\"slug\":\"二叉树中的最大路径和\",\"link\":\"#二叉树中的最大路径和\",\"children\":[]}]}],\"readingTime\":{\"minutes\":2.05,\"words\":615},\"filePathRelative\":\"posts/docs/《刷题——二叉树》.md\",\"localizedDate\":\"2023年1月23日\",\"excerpt\":\"<h2> 二叉树</h2>\\n<h3> 二叉树的LCA（least-common-ancestor）</h3>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">java<span class=\\\"token punctuation\\\">.</span>util<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token operator\\\">*</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Solution</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">int</span> lowestCommonAncestor <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TreeNode</span> root<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">int</span> o1<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">int</span> o2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// write code here</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>root <span class=\\\"token operator\\\">==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">.</span>val <span class=\\\"token operator\\\">==</span> o1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> o1<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">.</span>val <span class=\\\"token operator\\\">==</span> o2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> o2<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">int</span> l1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lowestCommonAncestor</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">.</span>left<span class=\\\"token punctuation\\\">,</span> o1<span class=\\\"token punctuation\\\">,</span> o2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">int</span> l2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lowestCommonAncestor</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">.</span>right<span class=\\\"token punctuation\\\">,</span> o1<span class=\\\"token punctuation\\\">,</span> o2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// l1、l2 不可能同时为 -1</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>l1 <span class=\\\"token operator\\\">==</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> l2<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>l2 <span class=\\\"token operator\\\">==</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> l1<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> root<span class=\\\"token punctuation\\\">.</span>val<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
